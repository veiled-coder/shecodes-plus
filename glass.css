*,
*::after,
*::before {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
:root,
:root.light {
  --body-bg--color1: rgba(229, 160, 99, 0.66) 22.8%;
  --body-bg--color2: rgb(219, 168, 139) 64.6%;
  --display-bg: rgba(190, 119, 56, 0.926);
  --direction: to top;
  --direction--bg: linear-gradient(
    var(--direction),
    var(--body-bg--color1),
    var(--body-bg--color2)
  );

  --blur: 5rem;
  --pseudoglass-bg: rgba(202, 103, 124, 0.83);
  --toggle-circle: rgb(171, 189, 248);
  --days: var(--search-bg);
  --box-shadow: rgba(25, 18, 25, 0.526);
  --border: none;
  --placeholder: rgb(99, 76, 80);
  --h1: black;
  --search-shadow: var(--box-shadow);

  --search-radius: white;
  --search-bg: rgba(244, 197, 235, 0.501);
  --city: white;
}
:root.dark {
  --body-bg--color1: 112.1deg, rgba(77, 100, 174, 0.821) 11.4%;
  --body-bg--color2: rgb(171, 189, 248) 70.2%;
  --display-bg: rgb(178, 212, 242);
  --direction--bg: linear-gradient(
    var(--body-bg--color1),
    var(--body-bg--color2)
  );

  --blur: 7rem;
  --pseudoglass-bg: rgba(15, 114, 221, 0.83);
  --days: white;
  --box-shadow: rgb(33, 2, 33);
  --border: 5px dotted var(--display-bg);
  --placeholder: rgb(74, 63, 63);
  --search-shadow: rgba(74, 70, 70, 0.449);

  --search-radius: rgba(96, 115, 178, 0.821);

  --search-bg: white;
  --city: white;
}
body {
  min-height: 100vh;
  width: 100%;
  background: var(--direction--bg);
  background-size: cover;
  /* bg has to be fixed to allow for a continous flow of bg in the container */
  background-attachment: fixed;
  display: flex;
  padding: 5% 0;
  justify-content: center;
  align-items: center;
  position: relative;
}
h1 {
  font-size: 3vw;

  color: var(--h1);
}
/* A frosted glass effect */
.container {
  width: 90vw;
  /* width: 90; */
  height: auto;
  /* we only add blur here */
  box-shadow: 0 0 0.3rem 0 rgba(0, 0, 0, 0.252);
  position: relative;
  background: inherit;
  overflow: hidden;
  padding-bottom: 5%;
  z-index: 1;
  border-radius: 1rem;
  display: flex;
  flex-direction: column;
  align-items: center;
}
.container::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  /* add color of the glass using inset box shadow (blur only also)
    inset makes the shadow inside the box rather than the usual under the box */
  box-shadow: inset 0 0 200rem var(--pseudoglass-bg);
  /* to get our frosted glass effect, apply filter property and inherit the body bg */
  filter: blur(var(--blur));
  background: inherit;
  /* at this stage, we see some blur effect around our container,
    instead we need a sharp edge container and a glass frosted body container */
  margin: -2rem;
  /* this pseudo container is now bigger and overflowing it main container,so 
    we set overflow hidden to the main container and get our sharp edge*/
  z-index: -1;
  /* ?to stay behing the main container */
}
/* using neumorphism in the display
RULES
1)we play around with white and black shadow
2) bg should not be white
3) our light source is either topleft or topright */
.display {
  width: 99%;
  height: 25vh;
  background: var(--display-bg);
  display: flex;
  align-items: center;
  justify-content: space-between;

  border-radius: 1rem 1rem 0.5rem 0.5rem;
  margin-top: 0.2rem;
  position: relative;
  padding: 0 1rem;
}
.theme {
  align-self: flex-start;
}
.search--label {
  width: 50%;
  height: 30%;
}
.search-display {
  width: 100%;
  background-color: var(--display-bg);
  height: 100%;
  border-radius: 2rem;

  box-shadow: inset -3px -3px 4px rgba(255, 255, 255, 0.239),
    inset 3px 3px 4px rgba(0, 0, 0, 0.492);

  border-color: transparent;

  text-align: center;
  font-size: 1rem;
}
.search-display::placeholder {
  color: var(--placeholder);
}
.search {
  border-radius: 5px;
  border: 2px solid var(--search-radius);
  box-shadow: 0 0 3px 0 var(--search-shadow);
  background-color: var(--search-bg);
  padding-top: 0.4rem;
  font-size: 1rem;
  width: 50%;
}
.location {
  width: 20%;
}
.searches {
  display: flex;
  width: 40%;
  justify-content: space-evenly;
}
/* container and content MUS HAVE same BACKGROUND */
/* theme buttons */
.toggle {
  --width: 4rem;
  --height: calc(var(--width) / 2);
  --border-radius: calc(var(--height) / 2);
  cursor: pointer;

  position: absolute;
  top: 2%;
  right: 2%;
}
/* --height are just variables */
.toggle--fill {
  width: var(--width);
  height: var(--height);
  border-radius: var(--border-radius);
  background-color: aliceblue;
  position: relative;
  transition: all 0.3s ease-in-out;
}
/* making the height half of the width makes it look
better and most importantly ,on the toogle--fill::after
the border will be completely round when we giive it
a round value,previuosly when i defined the height in %
of the .display size and applied 50% border radius,it didnt become round
even when i did 18rem border radius */
.toggle--fill::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 50%;
  background-color: var(--toggle-circle);
  border-radius: 50%;
  transition: all 0.3s ease-in-out;
  box-shadow: 0 0 3px rgba(0, 0, 0, 0.844);
}
.toggle--input {
  display: none;
}

/* without ~ it wont work,~means the next element */

.toggle--input:checked ~ .toggle--fill::after {
  transform: translateX(var(--height));
  background-color: pink;
}

/* days of the week */
.days {
  display: grid;

  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));

  grid-template-rows: auto;
  justify-self: center;
  gap: 10px;
  width: 100%;
  padding: 0 5%;
  margin-top: 2rem;
}
.days .day {
  background-color: aliceblue;

  height: 100px;
  display: flex;
  justify-content: center;
  background-color: var(--days);
  box-shadow: 0 0 0.1rem var(--box-shadow);
}
.day {
  border-radius: 1rem;
}
.day--heading {
  grid-column: 1/-1;
  justify-self: center;
  font-size: 2rem;
  text-align: center;
}

/* live content  */

.weather-info {
  align-self: flex-start;
  padding-left: 5%;
  margin-top: 2%;
}
.temp {
  font-size: 5vw;
}
.cel,
.fah {
  cursor: pointer;
}
.temp-container {
  display: flex;
}
@media (max-width: 992px) {
  h1 {
    font-size: 8vw;
  }
  .temp {
    font-size: 12vw;
  }
  .temp span {
    font-size: 5vw;
  }
}
@media (max-width: 768px) {
  .toggle {
    --height: calc(var(--width) / 2.2);
  }
  .toggle--input:checked ~ .toggle--fill::after {
    transform: translateX(calc(var(--width) / 2));
  }
  .search--label {
    width: 70%;
  }
}
@media (max-width: 700px) {
  .future {
    font-size: 1.5rem;
  }
}
@media (max-width: 450px) {
  .search {
    font-size: 0.7rem;
  }
}
